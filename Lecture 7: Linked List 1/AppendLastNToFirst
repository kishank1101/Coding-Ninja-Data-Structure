// AppendLastNToFirst
// Send Feedback
// Given a linked list and an integer n, append the last n elements of the LL to front.
// Indexing starts from 0. You don't need to print the elements, just update the elements and return the head of updated LL.
// Assume given n will be smaller than length of LL.
// Input format :

// Line 1 : Linked list elements (separated by space and terminated by -1)`

// Sample Input 1 :
// 1 2 3 4 5 -1
// 3
// Sample Output 1 :
// 3 4 5 1 2

#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define pb push_back
map <ll,ll> hm;
ll mod = 1e9+7;

struct node{
    int data;
    node* next;
    node(int x){
        data = x;
        next = NULL;
    }
};

node* solve(node* head,int n)
{
    node* slow = head, *fast = head;
    node* temp = head;
    int count = 0;
    while(count<n)
    {
        count++;
        fast = fast->next;
    }
    while(fast->next!=NULL)
    {
        slow = slow->next;
        fast=fast->next;
    }
    head = slow->next;
    fast->next = temp;
    slow->next = NULL;
    return head;
}

int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    node* head = NULL;
    node* temp = head;
    while(1)
    {
        int x;
        cin>>x;
        if(x==-1)
        {
            break;
        }
        if(head==NULL)
        {
            head = new node(x);
            temp = head;
        }
        else
        {
            temp->next = new node(x);
            temp = temp->next;
        }
    }
    int n;
    cin>>n;
    head = solve(head,n);
    temp = head;
    while(temp)
    {
        cout<<temp->data<<" ";
        temp = temp->next;
    }
}
