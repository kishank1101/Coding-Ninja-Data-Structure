
// Palindrome LinkedList
// Send Feedback
// Check if a given linked list is palindrome or not. Return true or false.
// Indexing starts from 0.
// Input format : Linked list elements (separated by space and terminated by -1)

// Sample Input 1 :
// 9 2 3 3 2 9 -1
// Sample Output 1 :
// true
// Sample Input 2 :
// 0 2 3 2 5 -1
// Sample Output 2 :
// false

#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define pb push_back
map <ll,ll> hm;
ll mod = 1e9+7;

struct node{
    int data;
    node* next;
    node(int x){
        data = x;
        next = NULL;
    }
};

int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    node* head = NULL;
    node* temp = head;
    while(1)
    {
        int x;
        cin>>x;
        if(x==-1)
        {
            break;
        }
        if(head==NULL)
        {
            head = new node(x);
            temp = head;
        }
        else
        {
            temp->next = new node(x);
            temp = temp->next;
        }
    }
    deque <int> q;
    temp = head;
    while(temp)
    {
        q.push_front(temp->data);
        temp = temp->next;
    }
    while(q.size()>=1)
    {
     //   cout<<q.front()<<" "<<q.back()<<endl;
        if(q.front()==q.back())
        {
            q.pop_back();
            q.pop_front();
        }
        else break;
    }
    if(q.size()<=1)
    {
        cout<<"YES"<<endl;
    }
    else cout<<"NO"<<endl;
}
