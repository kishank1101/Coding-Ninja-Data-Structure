// Print reverse LinkedList
// Send Feedback
// Print a given linked list in reverse order. You need to print the tail first and head last. You canâ€™t change any pointer in the linked list, just print it in reverse order.
// Input format : Linked List elements (separated by space and terminated by -1)

// Output format : Linked List elements in reverse order (separated by space)

// Sample Input 1 :
// 1 2 3 4 5 -1
// Sample Output 1 :
// 5 4 3 2 1
// Sample Input 2 :
// 1 2 3 -1
// Sample Output 2 :
// 3 2 1

#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define pb push_back
map <ll,ll> hm;
ll mod = 1e9+7;

struct node{
    int data;
    node* next;
    node(int x){
        data = x;
        next = NULL;
    }
};

node* reverse(node* head)
{
    node* temp = head;
    node* prev = NULL,* next = NULL;
    while(temp!=NULL)
    {
        next = temp->next;
        temp->next = prev;
        prev = temp;
        temp = next;
    }
    head = prev;
    return head;
}

int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    node* head = NULL;
    node* temp = head;
    while(1)
    {
        int x;
        cin>>x;
        if(x==-1)
        {
            break;
        }
        if(head==NULL)
        {
            head = new node(x);
            temp = head;
        }
        else
        {
            temp->next = new node(x);
            temp = temp->next;
        }
    }
    node* rev = reverse(head);
    while(rev)
    {
        cout<<rev->data<<" ";
        rev = rev->next;
    }
}
