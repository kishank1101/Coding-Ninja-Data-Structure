
// All possible ways
// Send Feedback
// Given two integers a and b. You need to find and return the count of possible ways in which we can represent the number a as the sum of unique integers raise to the power b.
// For eg. if a = 10 and b = 2, only way to represent 10 as -
// 10 = 1^2 + 3^2 
// Hence, answer is 1.
// Note : x^y represents x raise to the power y
// Inout Format :
// Two integers a and b (separated by space)
// Output Format :
// Count
// Constraints :
// 1 <= a <= 10^5
// 1 <= b <= 50
// Sample Input 1 :
// 10 2
// Sample Output 1 :
// 1
// Sample Input 2 :
// 100 2
// Sample Output 2 :
// 3
#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define pb push_back
map <ll,ll> hm;
ll mod = 1e9+7;


int solve(int a,int b,int num)
{
    int res = a-pow(num,b);
    if(res==0)
    {
        return 1;
    }
    else if(res<0)
    {
        return 0;
    }
    else return solve(res,b,num+1)+solve(a,b,num+1);
}

int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    int a,b;
    cin>>a>>b;
    cout<<solve(a,b,1);
    
}
