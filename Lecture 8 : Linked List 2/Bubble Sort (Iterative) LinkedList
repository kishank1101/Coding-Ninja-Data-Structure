
// Bubble Sort (Iterative) LinkedList
// Send Feedback
// Sort a given linked list using Bubble Sort (iteratively). While sorting, you need to swap just the data.
// You don't need to print the elements, just sort the elements and return the head of updated LL.
// Input format : Linked list elements (separated by space and terminated by -1)`

// Sample Input 1 :
// 1 4 5 2 -1
// Sample Output 1 :
// 1 2 4 5

#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define pb push_back
map <ll,ll> hm;
ll mod = 1e9+7;

struct node{
    int data;
    node* next;
    node(int x){
        data = x;
        next = NULL;
    }
};

node* sort(node* head)
{
    node* temp1 = head;
    node* temp = head->next;
    while(temp1->next!=NULL)
    {
        temp = temp1->next;
        while(temp!=NULL)
        {
           // cout<<temp1->data<<" "<<temp->data<<endl;
            if(temp1->data > temp->data)
            {
                swap(temp1->data,temp->data);
            }
            temp = temp->next;
        }
        temp1 = temp1->next;
        
    }
    return head;
}

int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    node* head = NULL;
    node* temp = head;
    while(1)
    {
        int x;
        cin>>x;
        if(x==-1)
        {
            break;
        }
        if(head==NULL)
        {
            head = new node(x);
            temp = head;
        }
        else
        {
            temp->next = new node(x);
            temp = temp->next;
        }
    }
    node* rev = sort(head);
    while(rev)
    {
        cout<<rev->data<<" ";
        rev = rev->next;
    }
}
