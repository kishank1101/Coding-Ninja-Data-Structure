// Binary Search (Recursive)
// Send Feedback
// Given an integer sorted array (sorted in increasing order) and an element x, find the x in given array using binary search. Return the index of x.
// Return -1 if x is not present in the given array.
// Note : If given array size is even, take first mid.
// Input format :

// Line 1 : Array size

// Line 2 : Array elements (separated by space)

// Line 3 : x (element to be searched)

// Sample Input :
// 6
// 2 3 4 5 6 8 
// 5 
// Sample Output:
// 3 

#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define pb push_back
map <ll,ll> hm;
ll mod = 1e9+7;

int binary_search(int* arr,int start,int end,int key)
{
    if(start>end)
    {
        return -1;
    }
    int mid = (start+end)/2;
    if(arr[mid]==key)
    {
        return mid;
    }
    else if(key<arr[mid])
    {
        return binary_search(arr,start,mid-1,key);
    }
    else return binary_search(arr,mid+1,end,key);
}

int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    int n;
    cin>>n;
    int arr[n];
    for(int i = 0;i<n;i++)
    {
        cin>>arr[i];
    }
    int key;
    cin>>key;
    cout<<binary_search(arr,0,n-1,key);
}
