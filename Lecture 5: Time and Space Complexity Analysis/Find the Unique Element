// Find the Unique Element
// Send Feedback
// Given an integer array of size 2N + 1. In this given array, N numbers are present twice and one number is present only once in the array.
// You need to find and return that number which is unique in the array.
// Note : Given array will always contain odd number of elements.
// Input format :
// Line 1 : Array size i.e. 2N+1
// Line 2 : Array elements (separated by space)
// Output Format :
// Unique element present in the array
// Constraints :
// 1 <= N <= 10^6
// Sample Input :
// 7
// 2 3 1 6 3 6 2
// Sample Output :
// 1

#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define pb push_back
map <int,int> hm;
ll mod = 1e9+7;


int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    int n;
    cin>>n;
    int arr[n];
    for(int i = 0;i<n;i++)
    {
        cin>>arr[i];
    }
    int res = 0;
    for(int i = 0;i<n;i++)
    {
        res = res^arr[i];
    }
    cout<<res<<endl;
}
