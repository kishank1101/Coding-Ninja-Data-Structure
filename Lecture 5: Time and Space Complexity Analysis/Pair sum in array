// Pair sum in array
// Send Feedback
// Given a random integer array A and a number x. Find and print the pair of elements in the array which sum to x.
// Array A can contain duplicate elements.
// While printing a pair, print the smaller element first.
// That is, if a valid pair is (6, 5) print "5 6". There is no constraint that out of 5 pairs which have to be printed in 1st line. You can print pairs in any order, just be careful about the order of elements in a pair.
// Input format :
// Line 1 : Integer N (Array size)
// Line 2 : Array elements (separated by space)
// Line 3 : Integer x
// Output format :
// Line 1 : Pair 1 elements (separated by space)
// Line 2 : Pair 2 elements (separated by space)
// Line 3 : and so on
// Constraints :
// 1 <= N <= 1000
// 1 <= x <= 100
// Sample Input:
// 9
// 1 3 6 2 5 4 3 2 4
// 7
// Sample Output :
// 1 6
// 3 4
// 3 4
// 2 5
// 2 5
// 3 4
// 3 4

#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define pb push_back
map <int,int> hm;
ll mod = 1e9+7;


int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    int n;
    cin>>n;
    int arr[n];
    for(int i = 0;i<n;i++)
    {
        cin>>arr[i];
        hm[arr[i]]++;
    }
    int k;
    cin>>k;
    for(int i = 0;i<n;i++)
    {
        int x = arr[i];
        int y = k-arr[i];
        if(x==y && hm[x]==1)
        {
            hm[x]=0;
            continue;
        }
        if(hm[y]>=1)
        {
            int z = hm[x]*hm[y];
            while(z--)
            {
                cout<<x<<" "<<y<<endl;
            }
            hm[x]=0;
            hm[y]=0;
        }
    }
    
}
