// Code: Edit Distance
// Send Feedback
// Given two strings s and t of lengths m and n respectively, find the Edit Distance between the strings. Edit Distance of two strings is minimum number of steps required to make one string equal to other. In order to do so you can perform following three operations only :
// 1. Delete a character

// 2. Replace a character with another one

// 3. Insert a character
// Note - Strings don't contain spaces
// Input Format :
// Line 1 : String s
// Line 2 : String t
// Output Format :
// Line 1 : Edit Distance value
// Constraints
// 1<= m,n <= 10
// Sample Input 1 :
// abc
// dc
// Sample Output 1 :
// 2

#include <bits/stdc++.h>

using namespace std;
#define ll long long
#define pb push_back
map <ll,ll> hm;
ll mod = 1e9+7;

int main() {
ios_base::sync_with_stdio(false);
cin.tie(NULL);
    string s,t;
    cin>>s>>t;
    int n = s.length();
    int m = t.length();
    int dp[n+1][m+1];
    for(int i =0;i<=n;i++)
    {
        for(int j = 0;j<=m;j++)
        {
            if(i==0)
            {
                dp[i][j]=j;
            }
            else if(j==0)
            {
                dp[i][j]=i;
            }
            else if(s[i-1]==t[j-1])
            {
                dp[i][j]=dp[i-1][j-1];
            }
            else
            {
                int x = 1+dp[i][j-1]; // insert a character
                int y = 1+dp[i-1][j]; //delete a character
                int z = 1+dp[i-1][j-1]; //replace a character
                dp[i][j]=min(x,min(y,z));
            }
        }
    }
    cout<<dp[n][m]<<endl;
}
